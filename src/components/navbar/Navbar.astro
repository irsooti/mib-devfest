---
import { getRelativeLocaleUrl } from "astro:i18n";
import Link from "./Link.astro";
import { Toolbar } from "./Toolbar";
import LanguageSelector from "./LanguageSelector.astro";
import { useTranslations } from "../../i18n/utils";
import { type KnownLocales } from "../../i18n";

interface Props {
  lang: KnownLocales;
}

const { lang } = Astro.props;

const homeUrl = getRelativeLocaleUrl(lang, "/");

const t = useTranslations(lang);
---

<Toolbar lang={lang} client:load>
  <Fragment slot="mainLinks">
    <Link href={homeUrl} exact>Home</Link>
    <Link href="/schedule">{t("schedule.title")}</Link>
    <div class="flex">
      <LanguageSelector href="/it/" isActive={lang === "it"}>IT</LanguageSelector
      >
      <div class="divider divider-horizontal"></div>
      <LanguageSelector href="/" isActive={lang === "en"}>EN</LanguageSelector
      >
    </div>
  </Fragment>
  <Fragment slot="mobileLinks">
    <Link exact href={homeUrl}>Home</Link>
    <Link href="/schedule">{t("schedule.title")}</Link>
    <Link href="/speakers">{t("speakers.title")}</Link>
    <Link href="/gamification">{t("gamification.title")}</Link>
    <Link href="/venue">{t("venue.title")}</Link>
    <Link href="/coc">{t("venue.title")} </Link>
    <div class="flex m-auto text-center">
      <LanguageSelector href="/it/" isActive={lang === "it"}>IT</LanguageSelector
      >
      <div class="divider divider-horizontal divider-neutral"></div>
      <LanguageSelector href="/" isActive={lang === "en"}>EN</LanguageSelector
      >
    </div>
  </Fragment>
</Toolbar>
